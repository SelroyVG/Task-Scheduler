Планировщик задач. Программа, позволяющая выполнить отложенное исполнение команды. 

Установка:
1) Выполнить команду «make».
2) Если программа устанавливается на системе в первый раз и БД отсутствует, её можно создать передав в MySQL содержимое файле init.sql.

Формат запуска:

«./taskscheduler -t [Time] -c ["Command"] -o ["Output Directory"]»

Обязательные параметры:
1) -t (или --time) определяет момент времени в который команда будет выполнена. Поддерживаются два формата -- 1) UNIX-время, 2) Полная запись в формате 2016-12-27 11:30:00
2) -c (или --command) команда, которая должна быть выполнена. Если команда состоит из нескольких слов (т.е. содержит пробелы), нужно обязательно заключать её в двойные кавычки. Если кавычки есть внутри самой команды, их необходимо экранировать.

Необязательные параметры:
1) -o (или --output) необязательный параметр, который определяет файл в который будет записан вывод исполняемой команды. Если параметр не указан, записывается в файл std_output.
2) Предусмотрена возможность перезапуска процессов после падения сервера. Для этого нужно запустить программу с параметром -r: «./taskscheduler -r». Все процессы будут перезапущены, а записи в MySQL исправлены. Если оказалось что старые процессы не были убиты, каждая команда будет выполнена дважды!

_____________________________________________________________________

Задача:

Сервис, позволяющий выполнить отложенный запуск команды в указанное время (при условии, что сам сервер работает, конечно).

Алгоритм программы:

Вначале выполняется проверка наличия необходимых входных параметров. Если чего-то не хватает, работа программы будет завершена с ошибкой. 

После этого парсится время, которое может быть в одном из двух форматов: 1) UNIX-время, 2) Полная запись в формате 2016-12-27 11:30:00. Внутри программы полная запись сразу преобразуется в UNIX-время с которым производятся все дальнейшие манипуляции.

Когда все входные параметры получены и подготовлены, программа создаёт дочерний процесс, который будет спать до указанного пользователем времени, записывает в базу данных информацию о дочернем процессе -- номер процесса, когда должна быть выполнена команда и сама команда. После этого родительский процесс завершает работу.

Дочерний процесс, в свою очередь, сразу после запуска сравнивает текущее время с временем запуска программы. Если пользователь указал момент в прошлом, процесс не станет выполнять команду, он запишет упоминание об этом в базу данных и завершит работу.

В ином случае дочерний процесс спит до наступления момента запуска, после чего выполняет команду, записывает информацию об этом в базу данных, записывает весь вывод команды пользователя в файл std_output и завершает свою работу сразу после выполнения команды. 
